{"version":3,"sources":["fbase.js","assets/FAMCO.png","routes/Auth.js","assets/heart1.png","assets/heart2.png","components/SingleComment.js","components/CommentTime.js","routes/Comments.js","components/Famcomsg.js","routes/Home.js","assets/kokoatalk2.PNG","assets/checkInvestingScore.PNG","routes/About.js","assets/cuteCrown.png","components/Navigation.js","routes/Profile.js","components/CommentTimeVip.js","components/CommentsVip.js","components/Famcovip.js","routes/Vip.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Auth","userObj","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","console","log","className","src","FAMCO","type","placeholder","required","onClick","prev","SingleComment","objKey","objValue","toString","replace","displayName","class","CommentTIme","commentTimeArry","substr","Comments","famcoMsgId","isOwner","FamcoMsgObj","NewComment","setNewComment","allComments","setAllComments","secreatKey","setSecreatKey","currentDate","setCurrentDate","commentRef","doc","date","Date","year","String","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","sec","getSeconds","milsec","getMilliseconds","onCommentSubmit","updateDoc","comments","arrayUnion","toFixed","Math","random","commentsNumber","commentTime","useEffect","onSnapshot","collection","snapshot","data","map","commentArry","Object","keys","CommentTime","maxLength","autoFocus","Famco","isUserInfoExist","editing","setEditing","text","NewFamcoMsg","setNewFamcoMsg","famcoTextRef","id","isAdmin","setIsAdmin","isLiked","setIsLiked","alreadyLiked","setAlreadyLiked","openComment","SetOpenComment","numberOfComments","setNumberOfComments","didIlike","likedName","indexOf","uid","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","navigator","language","likes","toggleComment","uploadedDate","icon","faTrash","faBullhorn","faPencilAlt","heartIcon2","heartIcon1","faCommentDots","style","marginTop","emptyComments","Home","NewFamcoMsges","setNewFamcoMsges","attachment","setAttachment","isAttachmentExist","SetIsAttachmentExist","SetIsUserInfoExist","isLoading","setIsLoading","checkUserInfo","q","query","where","getDocs","forEach","orderBy","famcoArr","docs","attachmentRef","uuidv4","uploadString","uploadFile","getDownloadURL","newfamcoPosting","createdAt","now","creatorId","addDoc","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","faHandPointUp","size","evnet","faTimes","About","faCode","href","checkInvestingScore","kokoatalk2","Navigation","scrollTo","isUserVip","SetIsUserVip","checkVip","document","docRef","getDoc","vip","to","faUser","color","faInfoCircle","cuteCrown","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","setNewUserInfo","duplication","firstLoginWithGoogle","isNicknameExist","searchingSameIdQuery","duplicationForNickname","googleUserinfoUpdate","currentUser","providerData","providerId","addNewGoogleUserInfoObj","whatPostLiked","alert","userInfoArr","length","addNewUserInfoObj","updateProfile","trim","signOut","push","CommentTImeVip","CommentsVip","FamcoVipObj","CommentTimeVip","FamcoVip","AppRouther","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","Profile","eact","Vip","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b7be481.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n//import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY, \r\n    authDomain:process.env.REACT_APP_AUTH_DOMAIN ,\r\n    projectId:process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n    };\r\n\r\n    const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n    \r\n    export const authService = getAuth(firebaseApp);\r\n    export const dbService = getFirestore();\r\n    export const storageService = getStorage();","export default __webpack_public_path__ + \"static/media/FAMCO.79983dba.png\";","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport FAMCO from \"../assets/FAMCO.png\";\r\n\r\n\r\nconst Auth = ({userObj}) => {    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if(name ===\"email\") {\r\n            setEmail(value);\r\n        }else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n        \r\n    };\r\n    let data;\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            \r\n        if(newAccount){\r\n            data = await createUserWithEmailAndPassword(authService, email, password) ;\r\n        } else {\r\n            data = await signInWithEmailAndPassword(authService, email, password);\r\n            \r\n        } \r\n        \r\n    }   catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n\r\nconst toggleAccount = () => setNewAccount((prev) => !prev);\r\nconst onSocialClick = async (event) => {\r\n    const {\r\n    target: { name }} = event;\r\n    let provider;\r\n    try {\r\n        \r\n    if (name === \"google\") {\r\n        \r\n    provider = new GoogleAuthProvider();\r\n    const result = await signInWithPopup(authService, provider);\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    // const token = credential.accessToken;\r\n    } \r\n    } catch (error) {\r\n    console.log(error);\r\n    \r\n    }\r\n    };\r\nreturn (\r\n    <div className=\"authContainer\">\r\n        <img src={FAMCO}\r\n            className=\"authIcon\"\r\n        />\r\n\r\n    <form onSubmit={onSubmit}  className=\"container\">\r\n        <input \r\n            name=\"email\" \r\n            type=\"email\" \r\n            placeholder=\"Email\" \r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            required\r\n        />\r\n        <input \r\n            name=\"password\"\r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            required\r\n        />\r\n        <input type=\"submit\" \r\n            className=\"authInput authSubmit\"\r\n            value={newAccount ? \"Create Account\" : \"Log In\"} \r\n        />\r\n            \r\n            \r\n        {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount? \"Sign in\" : \"Create Account\"}\r\n    </span>\r\n    <div className=\"authBtns\">\r\n        <button type=\"button\" onClick={onSocialClick} name=\"google\" className=\"authBtn authBtn__span\">\r\n            Continue with Google\r\n        </button>\r\n    </div>\r\n</div>\r\n);\r\n};\r\nexport default Auth;","export default __webpack_public_path__ + \"static/media/heart1.5041d0a0.png\";","export default __webpack_public_path__ + \"static/media/heart2.cb2fc326.png\";","import React from \"react\";\r\n\r\n\r\nconst SingleComment = ({objKey,objValue, userObj}) => {\r\n    /* //// THIS IS FOR NEXT WHEN FIREBASE PROVIDE NESTED QUERY@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@             \r\n    const db =getFirestore ();\r\n    const [editing, setEditing] = useState(false);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n\r\n    const commentRef = doc(dbService, \"NewFamcoMsg\", `${famcoMsgId}`) ;\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    \r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok= window.confirm(\"Are you sure you want to delete the famco message?\");\r\n        if(ok){\r\n            await updateDoc(commentRef,  {\r\n                comments : wholeCommentArry.filter(item => item !== objValue)\r\n    \r\n            });\r\n        }\r\n    };\r\n\r\n    const onCommentChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewComment(value);\r\n        \r\n    };\r\n    \r\n    const onEditCommentSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        await updateDoc(commentRef,  {\r\n            comments : ({\r\n                [userObj.displayName] : newComment,\r\n            })\r\n        });\r\n        \r\n    }\r\n\r\n    const onEdit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        db\r\n        .collection('proprietary')\r\n        .doc(`${famcoMsgId}`)\r\n        .set(\r\n        { comments: [{[userObj.displayName] : newComment }] },\r\n        { merge: true }\r\n        )\r\n    }\r\n    */ //// THIS IS FOR NEXT WHEN FIREBASE PROVIDE NESTED QUERY@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n\r\n    return(\r\n        <div>\r\n\r\n                        <div className= \"singleComment\">    \r\n                            <div className=\"commentMsg\" >\r\n                            \r\n                            {objKey.toString().replace(/[0-9]/g,\"\") === userObj.displayName+\".\" ? (\r\n                                <>\r\n                                <span className=\"commentOwner__name\">\r\n                                    {objKey.toString().replace(/[0-9]/g,\"\")}\r\n                                </span>\r\n                                <span>\r\n                                    \r\n                                </span>\r\n\r\n                                <span className=\"commentOwner__date\">\r\n                                \r\n                                </span>\r\n                                \r\n                                </>\r\n                            ): (\r\n                                <>\r\n                                <span class= \"notranslate\" className=\"commentOthers\">\r\n                                    {objKey.toString().replace(/[0-9]/g,\"\")}\r\n                                </span>\r\n                                <span class= \"notranslate\" className=\"commentOwner__date\">\r\n                                \r\n                                </span>\r\n                                </>\r\n                            )\r\n                            }\r\n                                <span class= \"notranslate\" className=\"commentText\">\r\n                                    {objValue}\r\n                                </span>        \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SingleComment;","import React from \"react\";\r\n\r\nconst CommentTIme = ({commentTimeArry}) => {\r\n    return(\r\n        <div className=\"commentTime\">\r\n            {commentTimeArry.toString().substr(0,22)}\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentTIme;","import { dbService } from \"fbase\";\r\nimport { doc, updateDoc, collection, onSnapshot,arrayUnion} from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport SingleComment from \"components/SingleComment\";\r\nimport CommentTime from \"components/CommentTime\";\r\n\r\n\r\n\r\nconst Comments = ({famcoMsgId, isOwner, userObj,FamcoMsgObj }) => {\r\n\r\n    const [NewComment, setNewComment] = useState(\"\");\r\n    const [allComments, setAllComments] = useState([]);\r\n    const [secreatKey, setSecreatKey] = useState(0);\r\n    const [currentDate, setCurrentDate] = useState(\"\");\r\n    const commentRef = doc(dbService, \"NewFamcoMsg\", `${famcoMsgId}`) ;\r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n    const milsec = String(date.getMilliseconds()).padStart(2,\"0\");\r\n    \r\n    \r\n    const onCommentChange = ({ target: { value } }) => {\r\n        setNewComment(value);\r\n        };\r\n\r\n    const onCommentSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n\r\n        await updateDoc(commentRef,  {\r\n            comments : arrayUnion({\r\n                [userObj.displayName+(secreatKey.toFixed(2))] : NewComment,\r\n            })\r\n            //setCommentObj();\r\n        });\r\n        setSecreatKey(( Math.random() * (10 - 1) + 1 ));\r\n        \r\n        await updateDoc(commentRef,  {\r\n            commentsNumber : FamcoMsgObj.commentsNumber+1,\r\n        });\r\n        setNewComment(\"\");\r\n\r\n        \r\n        await updateDoc(commentRef,  {\r\n            commentTime : arrayUnion({\r\n                [year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes + \" : \" + sec + \" @ \" + milsec] : userObj.displayName,\r\n            })\r\n        });\r\n    };\r\n\r\n    useEffect (() => { \r\n\r\n            const snapshotCommanderComment =  onSnapshot(collection(dbService, \"NewFamcoMsg\"), \r\n            (snapshot) => {\r\n                const unsub = onSnapshot(doc(dbService, \"NewFamcoMsg\", `${famcoMsgId}`), (doc) => {\r\n                    if(doc.data()){\r\n                        setAllComments(doc.data().comments);\r\n                    }\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(\"성공!\");\r\n                });\r\n\r\n\r\n                const snapshotCommanderDate =  onSnapshot(collection(dbService, \"NewFamcoMsg\"), \r\n                (snapshot) => {\r\n                    const unsub = onSnapshot(doc(dbService, \"NewFamcoMsg\", `${famcoMsgId}`), (doc) => {\r\n                        if(doc.data()){\r\n                            setCurrentDate(doc.data().commentTime);\r\n                            \r\n                        }\r\n                    });\r\n                },\r\n                (error) => {\r\n                    console.log(\"성공!\");\r\n                    });\r\n\r\n            }, []);\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <div className=\"theWholeComments\">\r\n                <div class=\"notranslate\" className=\"userAndComment\">\r\n                    {allComments.map((commentArry) => (\r\n                        <SingleComment\r\n                            famcoMsgId={famcoMsgId}\r\n                            objKey={Object.keys(commentArry)} \r\n                            objValue={commentArry[Object.keys(commentArry)]}\r\n                            userObj={userObj} \r\n                            isOwner={isOwner}\r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div class=\"notranslate\" className=\"onlyDate\">\r\n                    {currentDate&&currentDate.map((commentTimeArry) => (\r\n                        <CommentTime \r\n                            commentTimeArry={Object.keys(commentTimeArry)}\r\n                        /> \r\n                    ))}\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <form onSubmit={onCommentSubmit} className=\"famcoMsgForm\">\r\n                <div className=\"commentForm\">\r\n                    <textarea \r\n                        class= \"comment__input\"\r\n                        onChange= {onCommentChange} \r\n                        value={NewComment} \r\n                        type=\"text\" \r\n                        placeholder=\"Write a comment\" \r\n                        maxLength=\"71\" \r\n                        required \r\n                        autoFocus\r\n                        >\r\n                    </textarea>\r\n                    <input type=\"submit\" value=\"Add\"  className=\"commentAdd\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Comments;","import { dbService } from \"fbase\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { storageService } from \"../fbase\";\r\nimport { doc, deleteDoc, updateDoc, collection, onSnapshot } from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt, faBullhorn, faCommentDots, } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faCommentDots as emptyComments } from '@fortawesome/free-regular-svg-icons'\r\nimport heartIcon1 from \"../assets/heart1.png\";\r\nimport heartIcon2 from \"../assets/heart2.png\";\r\nimport Comments from \"routes/Comments\";\r\n\r\n\r\nconst Famco = ({FamcoMsgObj, isOwner, userObj, isUserInfoExist}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(FamcoMsgObj.text);\r\n    const famcoTextRef = doc(dbService, \"NewFamcoMsg\", `${FamcoMsgObj.id}`) ;\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\r\n    const [openComment, SetOpenComment] = useState(false);\r\n    const [numberOfComments, setNumberOfComments] = useState(0);\r\n    \r\n    let didIlike = FamcoMsgObj.likedName.indexOf(userObj.uid);\r\n\r\n    \r\n    const onDeleteClick = async () => {\r\n        const ok= window.confirm(\"Are you sure you want to delete the famco message?\");\r\n        \r\n        if(ok){\r\n            await deleteDoc(famcoTextRef);\r\n            if(FamcoMsgObj.attachmentUrl) {\r\n            await deleteObject(ref(storageService, FamcoMsgObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(famcoTextRef, {\r\n            text: NewFamcoMsg,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewFamcoMsg(value);\r\n        \r\n    };\r\n\r\n    useEffect (() => {\r\n        const snapshotCommander =  onSnapshot(collection(dbService, \"NewFamcoMsg\"), \r\n            (snapshot) => {\r\n                const unsub = onSnapshot(doc(dbService, \"NewFamcoMsg\", FamcoMsgObj.id), (doc) => {\r\n                    if(doc.data()){\r\n                        setNumberOfComments(doc.data().commentsNumber);\r\n                    }\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(\"성공!\");\r\n                });\r\n    },[]);\r\n    \r\n\r\n    useEffect (() => {\r\n        \r\n\r\n        const locale = navigator.language;\r\n       // console.log(locale,\" what language is it now?\");\r\n        if(FamcoMsgObj.name === \"ADMIN\"){\r\n            setIsAdmin(true);\r\n            \r\n        }else{\r\n            setIsLiked(false);\r\n        }\r\n\r\n        if(alreadyLiked){\r\n        \r\n            if(didIlike <= 0){\r\n                \r\n                    updateDoc(famcoTextRef, {\r\n                        likes:  FamcoMsgObj.likes+1,\r\n                        likedName: FamcoMsgObj.likedName +\",\"+userObj.uid,\r\n                    });\r\n            }\r\n\r\n            if(didIlike !== -1){\r\n                \r\n                    if(FamcoMsgObj.likes > 0){\r\n                        updateDoc(famcoTextRef, {\r\n                            likes: FamcoMsgObj.likes-1,\r\n                            likedName: FamcoMsgObj.likedName.replace((\",\"+userObj.uid),\"\"),\r\n                        });\r\n                        \r\n                    }\r\n                \r\n            }\r\n        }\r\n    },[isLiked]);\r\n        \r\n    const toggleLike = () => {\r\n        setAlreadyLiked(true);\r\n        setIsLiked((prev) => !prev);\r\n    }\r\n\r\n    const toggleComment = () => SetOpenComment((prev) => !prev);\r\n    \r\n    return(\r\n        <div class= \"notranslate\" className=\"famcoMsg\">\r\n            {editing ? ( \r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container famcoMsgEdit\"> \r\n                    <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Edit your Famco message\" \r\n                    value={NewFamcoMsg} \r\n                    required\r\n                    autoFocus \r\n                    onChange={onChange}\r\n                    className=\"famcoMsgInput\"\r\n                    maxLength=\"120\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Update\"  className=\"formBtn\" />\r\n                    \r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                ) : ( \r\n                <>  \r\n                    \r\n                    <h5 className=\"FamcoMsgCreatedDate\">{FamcoMsgObj.uploadedDate}</h5>\r\n                    \r\n                    <h4  className=\"famcoMsgText\">\r\n                        \r\n                    {FamcoMsgObj.attachmentUrl && <img src={FamcoMsgObj.attachmentUrl} className=\"famcoAttachedImg\"/>}\r\n                        \r\n                    </h4>\r\n                    <span class= \"notranslate\" className=\"famcoText\">{FamcoMsgObj.text}</span>\r\n                    <br/>\r\n                    \r\n                \r\n\r\n                    {isOwner ?(\r\n                            <span class= \"notranslate\">\r\n                                <h5 className=\"famcoOwner\"> {userObj.displayName}</h5>\r\n                            </span>\r\n                        ) : (\r\n                            <span class= \"notranslate\">\r\n                                <h5 className=\"famcoOtherOwners\"> {FamcoMsgObj.name}</h5>  \r\n                            </span>     \r\n                        )\r\n                    }\r\n                    {userObj.displayName === \"ADMIN\" && (\r\n                            <span className=\"famcoMsg__actions superDelete\" onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>  \r\n                        )}\r\n                        {isAdmin? <FontAwesomeIcon icon={faBullhorn}  className=\"megaphone\" /> : <> </> }\r\n                        {isOwner && (\r\n                        <div className=\"famcoMsg__actions\"> \r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>                            \r\n                        </div>\r\n                        )}\r\n                        \r\n\r\n                    {isUserInfoExist ? (\r\n                        <>\r\n                        <div className=\"FamcoMsgLikes\">\r\n                            <img src={didIlike !== -1 ?heartIcon2:heartIcon1} \r\n                                onClick={toggleLike}\r\n                            /> \r\n                            <span class= \"notranslate\">{FamcoMsgObj.likes}</span>\r\n                            \r\n                        </div>\r\n                        {openComment ?(\r\n                            <> \r\n                            <FontAwesomeIcon onClick={toggleComment} icon={faCommentDots }  className=\"FamcoComments\"/>\r\n                            <span class= \"notranslate\" className=\"numberOfComments\">\r\n                                {numberOfComments}\r\n                            </span>\r\n\r\n                            <div style={{ marginTop: 30 }}>     \r\n                                \r\n                                    <Comments \r\n                                    key={NewFamcoMsg.id} \r\n                                    famcoMsgId= {FamcoMsgObj.id}\r\n                                    userObj={userObj}\r\n                                    FamcoMsgObj={FamcoMsgObj}\r\n                                    />\r\n                            </div>\r\n                        </>\r\n                            ) : (\r\n                            <>\r\n                                <FontAwesomeIcon onClick={toggleComment} icon={emptyComments} className=\"FamcoComments\" />\r\n                                \r\n                                <span class= \"notranslate\" className=\"numberOfComments\">\r\n                                {numberOfComments}\r\n                                </span> \r\n                            </>\r\n                            )\r\n                        }\r\n                        </>\r\n                    ) : ( <> </>)\r\n                    \r\n                    }\r\n                    \r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Famco;","import Famco from \"components/Famcomsg\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { addDoc, collection, getDocs, query, onSnapshot, orderBy, where, } from \"@firebase/firestore\";\r\nimport {ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes, faHandPointUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(\"\");\r\n    const [NewFamcoMsges, setNewFamcoMsges] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [isAttachmentExist, SetIsAttachmentExist] = useState(false);\r\n    const [isUserInfoExist, SetIsUserInfoExist] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false); \r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    //const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n\r\n\r\n    const getNewFamcoMsges = async() => {\r\n    const DbNewFamcoMsges = query(collection(dbService,\"NewFamcoMsg\"));\r\n    const querySnapshot = await getDocs(DbNewFamcoMsges);\r\n    querySnapshot.forEach((doc) => {\r\n        const newFamcoMsgObj = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n                \r\n        }\r\n        setNewFamcoMsges((prev) => [newFamcoMsgObj, ...prev]);\r\n    });\r\n    };\r\n    \r\n    \r\n\r\n    const checkUserInfo = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach(() => {\r\n                SetIsUserInfoExist(true);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    useEffect (() => { \r\n\r\n        \r\n\r\n        checkUserInfo();\r\n        const q = query(\r\n            collection(dbService, \"NewFamcoMsg\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n            );\r\n            onSnapshot(q, (snapshot) => {\r\n            const famcoArr = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            }));\r\n            setNewFamcoMsges(famcoArr);\r\n            });\r\n\r\n            \r\n            \r\n            }, []);\r\n\r\n    const onSubmit = async(event) => {       \r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n        attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n        \r\n        }\r\n        const newfamcoPosting = {\r\n            text: NewFamcoMsg,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            name: userObj.displayName,\r\n            uploadedDate:  year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes,\r\n            likes: 0,\r\n            likedName: \"\",\r\n            commentsNumber:0,\r\n            comments:[],\r\n            commentTime:[],\r\n            attachmentUrl\r\n            \r\n        };\r\n        try {\r\n            await addDoc(collection(dbService, \"NewFamcoMsg\"), newfamcoPosting);\r\n            setIsLoading(false);\r\n            } catch (error) {\r\n            }\r\n            \r\n            setNewFamcoMsg(\"\");\r\n            setAttachment(\"\");\r\n            SetIsAttachmentExist(false);\r\n            \r\n    };\r\n    const onChange = ({ target: { value } }) => {\r\n        setNewFamcoMsg(value);\r\n        };\r\n    \r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n                } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        SetIsAttachmentExist(true);\r\n        reader.readAsDataURL(theFile);\r\n        \r\n    };\r\n\r\n\r\n    const onClearAttachment = (evnet) => {\r\n        SetIsAttachmentExist(false);\r\n        setAttachment(\"\");\r\n    }\r\n    \r\n    return (\r\n        \r\n    <div className=\"container\">\r\n        \r\n        <form onSubmit ={onSubmit} className=\"famcoMsgForm\">\r\n        <div className=\"famcoMsgInput__container\">\r\n            {isUserInfoExist ? ( \r\n                <>\r\n            <textarea\r\n                className=\"famcoMsgInput__input\"\r\n                value={NewFamcoMsg} \r\n                onChange= {onChange} \r\n                type=\"text\" \r\n                placeholder=\" What's on your mind?\" \r\n                maxLength=\"120\" \r\n                required\r\n            />\r\n            {isLoading ? ( \r\n                <div className=\"loading\"></div>\r\n            ) : (\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Post\" \r\n                    className=\"famcoMsgInput__post\"\r\n                />\r\n            )}\r\n            \r\n\r\n            {isAttachmentExist ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                <label htmlFor=\"attach-file\" className=\"famcoMsgInput__label\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n                    <span> Add photo</span>  \r\n                </label>\r\n                <input\r\n                className=\"famcoMsgInput__labelChild\"\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                />\r\n                </>\r\n            )}\r\n\r\n            </>\r\n            ):(\r\n                <div className= \"noUserName\">\r\n                    <FontAwesomeIcon className=\"noUserName__icon\" icon={faHandPointUp} size={\"2x\"}/>\r\n                    <span className=\"noUserName__span\">Add infomation on your profile to start</span>\r\n                </div>\r\n            )}\r\n            {attachment && (\r\n            <div className=\"famcoMsgForm__attachment\">\r\n                <img \r\n                src={attachment}\r\n                />\r\n            <div className=\"famcoMsgForm__clear\" onClick={onClearAttachment}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>\r\n            )}\r\n            </div>\r\n            \r\n        </form>\r\n        <div style={{ marginTop: 30 }}>     \r\n            {NewFamcoMsges.map((NewFamcoMsg) => (\r\n                <Famco \r\n                key={NewFamcoMsg.id} \r\n                FamcoMsgObj={NewFamcoMsg} \r\n                isOwner={NewFamcoMsg.creatorId === userObj.uid}\r\n                userObj={userObj}\r\n                isUserInfoExist={isUserInfoExist}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/kokoatalk2.f2884164.PNG\";","export default __webpack_public_path__ + \"static/media/checkInvestingScore.52797942.PNG\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus,faCode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport kokoatalk2 from \"../assets/kokoatalk2.PNG\";\r\nimport checkInvestingScore from \"../assets/checkInvestingScore.PNG\";\r\n\r\n\r\n\r\n\r\nconst About = () => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            \r\n        <div className=\"container\">\r\n\r\n                <div className=\"aboutHeader\">\r\n                    <span>Welcome to Famco world! </span>\r\n                    <span>Share your story to the world. </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"aboutFamco\">\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                    <span>Famco is a Mobile-Friendly web application that people can share stories.\r\n                        This web is built on React(hook) and Firebase.\r\n                    </span>\r\n                    \r\n                    \r\n                </div>\r\n                    \r\n                <div className=\"aboutMe\">\r\n                <FontAwesomeIcon icon={faCode} />\r\n                    <span>Hello, I am Jay.</span>\r\n                    <span>Please check my other web-apps out below.</span>\r\n                </div>\r\n\r\n                <div className=\"aboutPortfolio\">\r\n                    <span>- Javior( Vanilla JS & CSS & HTML) -</span>\r\n                    <a href=\"https://jay2009.github.io/chrome_app/index.html\"> \r\n                        <img src={checkInvestingScore} className=\"kokoatalk2\"/> \r\n                    </a>\r\n                    <span>Check your stock investment score ! </span><br/>\r\n                    <a href=\"https://jay2009.github.io/chrome_app/index.html\">Link </a>\r\n                </div>\r\n\r\n                <div className=\"aboutPortfolio\">\r\n                    <span>- Kokoa clone(CSS & HTML) -</span>\r\n                    <a href=\"https://jay2009.github.io/kokoa-clone-2020/\"> \r\n                        <img src={kokoatalk2} className=\"kokoatalk2\"/> \r\n                    </a>\r\n                    <span>Dosen't it look pretty familiar to you? </span><br/>\r\n                    <a href=\"https://jay2009.github.io/kokoa-clone-2020/\">Link </a>\r\n                </div>\r\n                \r\n                <div className=\"aboutContact\">\r\n                    <span>Check other projects on</span>\r\n                    <span>Github : <a href=\"https://github.com/Jay2009\">https://github.com/Jay2009 </a></span> \r\n                    <br/>\r\n                    <span>Contact : jaem2009@naver.com </span>\r\n                </div>\r\n        \r\n            \r\n        \r\n        </div>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/cuteCrown.8d0b09b9.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { doc, collection, getDocs,getDoc, query, where, } from \"@firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport cuteCrown from \"../assets/cuteCrown.png\";\r\nimport FAMCO from \"../assets/FAMCO.png\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Navigation = ({userObj}) => {\r\n\r\n    const onClick = () => {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    const [isUserVip, SetIsUserVip] = useState(false);\r\n\r\n    const checkVip = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            );\r\n            const getDocuments = await getDocs(q);\r\n            \r\n            getDocuments.forEach(async(document) => {\r\n                const docRef = doc(dbService, \"UserInfo\", `${document.id}`);\r\n                const getDocument = await getDoc(docRef);\r\n                    if(getDocument.data().vip === \"jandc914\"){\r\n                        SetIsUserVip(true);\r\n                    }else {\r\n                        \r\n                    }\r\n            });\r\n    }\r\n\r\n\r\nuseEffect (() => { \r\n        \r\n    checkVip();\r\n        \r\n        }, []);\r\n\r\n\r\n\r\n\r\nreturn (\r\n<nav className=\"navigation\">\r\n    <div className=\"navigation__position\">\r\n    <ul  className =\"navigation__Icons\">\r\n        \r\n        <li className=\"navLogo\">\r\n            <Link \r\n            className=\"logo\" \r\n            to=\"/\" \r\n            onClick={onClick}\r\n            >\r\n            <img src={FAMCO}></img>\r\n            </Link>\r\n        </li>\r\n\r\n        <li className=\"navUser\">\r\n            <Link \r\n            to=\"/profile\"\r\n            onClick={onClick}\r\n            > \r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        \r\n        <li className=\"navAbout\">\r\n            <Link\r\n            to=\"/about\"\r\n            onClick={onClick}\r\n            >\r\n            <FontAwesomeIcon icon={faInfoCircle} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n\r\n        \r\n    </ul>\r\n\r\n\r\n            <span className=\"displayUserName\" >\r\n            {userObj.displayName\r\n                ? ( <span class=\"notranslate\"> {userObj.displayName}</span>)\r\n                : (\"Profile\")}\r\n            </span>\r\n\r\n            \r\n        \r\n\r\n        {isUserVip ? (\r\n        <li className=\"navVip\">\r\n            <Link \r\n            to=\"/vip\"\r\n            onClick={onClick}\r\n            > \r\n            <img src={cuteCrown}/>\r\n            </Link>\r\n        </li>\r\n        ):( <></> )\r\n        }\r\n\r\n    \r\n    </div>\r\n</nav>\r\n);\r\n};\r\n\r\n\r\nexport default Navigation;","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { doc, updateDoc,addDoc } from \"firebase/firestore\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { collection, getDocs, query, where,onSnapshot, orderBy} from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\n\r\n\r\nexport default ({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [NewUserInfo, setNewUserInfo] = useState([]);\r\n    let duplication = false;\r\n    let firstLoginWithGoogle = false;\r\n    let isNicknameExist = false;\r\n\r\n    const getUpdatedUsersInfo = async() => {\r\n    const DbUpdatedUsersInfo = query(collection(dbService,\"UserInfo\"));\r\n    const querySnapshot = await getDocs(DbUpdatedUsersInfo);\r\n    \r\n    querySnapshot.forEach((doc) => {\r\n        const updateUsersInfo = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n        }\r\n        setNewUserInfo((prev) => [updateUsersInfo, ...prev]);\r\n        });\r\n    };\r\n\r\n    const searchingSameIdQuery = async() =>{\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach((document) => {\r\n                firstLoginWithGoogle = true;\r\n                duplication = true;\r\n            });\r\n    }\r\n\r\n    const duplicationForNickname = async() =>{\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"name\", \"==\", newDisplayName)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach((document) => {\r\n                isNicknameExist = true;\r\n            });\r\n    }\r\n    \r\n    ///////// 이곳 if 문에 auth 에서 @@@구글@@@@@ 로 접속 하였을때를 조건으로 만들어야함 ..........\r\n    const googleUserinfoUpdate = async() => {\r\n        const googleProvider = authService.currentUser.providerData[0].providerId;\r\n        if (googleProvider === \"google.com\" ){\r\n            await searchingSameIdQuery();\r\n            \r\n            if (firstLoginWithGoogle === false){\r\n                \r\n                await duplicationForNickname();\r\n                if (isNicknameExist === false){\r\n                    const addNewGoogleUserInfoObj = {\r\n                    createdAt: Date.now(),\r\n                    creatorId: userObj.uid ,\r\n                    name: newDisplayName,\r\n                    whatPostLiked : \"\"\r\n                    }\r\n                    try {\r\n                        const docRef = await addDoc(collection(dbService, \"UserInfo\"),addNewGoogleUserInfoObj);\r\n                    } catch (error) {\r\n                }\r\n            }else{ alert(\" nickname is already in use.\");\r\n            setNewDisplayName(\"\");\r\n        }\r\n        }\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect (() => {\r\n    const q = query(\r\n        collection(dbService, \"UserInfo\"),\r\n        orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n        const userInfoArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n            \r\n        }));\r\n        setNewUserInfo(userInfoArr);\r\n        \r\n        });\r\n\r\n            googleUserinfoUpdate();\r\n            }, []);\r\n            \r\n    \r\n\r\n    const onLogOutClick = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value.trim().replace(/[^A-Za-z]/ig, ''));\r\n        \r\n    };\r\n    \r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(newDisplayName.length > 2){\r\n            \r\n                //if (userObj.displayName !== newDisplayName)  {\r\n                    await searchingSameIdQuery();\r\n                        \r\n                    const addNewUserInfoObj = {\r\n                                creatorId: userObj.uid ,\r\n                                name: newDisplayName,\r\n                                createdAt: Date.now(),\r\n                                whatPostLiked : \"\"\r\n                            }\r\n                            \r\n                    if(duplication === false){\r\n                        await duplicationForNickname();\r\n                        if(isNicknameExist === false){\r\n                                try { \r\n                                    await addDoc(collection(dbService, \"UserInfo\"),addNewUserInfoObj);\r\n                                    } catch (error) {\r\n                                    }\r\n                                    await updateProfile(await authService.currentUser, {\r\n                                        displayName: newDisplayName,\r\n                                    });\r\n                                    alert(\"Update success !\");\r\n                        }else{\r\n                            alert(\"Nick name is already in use\");\r\n                            setNewDisplayName(\"\");\r\n                        }\r\n                    }else{\r\n                        await duplicationForNickname();\r\n                        if(isNicknameExist === false){\r\n                        const q = query(\r\n                            collection(dbService, \"UserInfo\"),\r\n                            where(\"creatorId\", \"==\", userObj.uid)\r\n                            );\r\n                            const querySnapshot = await getDocs(q);\r\n                            querySnapshot.forEach(async(document) => {\r\n                                await updateDoc(doc(dbService, \"UserInfo\", `${document.id}`), {\r\n                                name: newDisplayName,\r\n                                });\r\n                            });\r\n                            await updateProfile(await authService.currentUser, {\r\n                                displayName: newDisplayName,\r\n                            });\r\n                            alert(\"Update success !\");\r\n                        }else {\r\n                            alert(\"the user nickname already in use\");\r\n                            setNewDisplayName(\"\");\r\n                        }\r\n                        }\r\n                    \r\n                    //}\r\n        refreshUser(newDisplayName);\r\n        } else{\r\n            alert(\"Name should be more than 2 chracters\");\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n                <span className= \"onlyEnglish\">\r\n                    Please, write your name only in English\r\n                </span>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Write your user name\"\r\n                    value={newDisplayName}\r\n                    maxLength=\"12\"\r\n                    required\r\n                    autoFocus\r\n                    className=\"profileFormInput\"\r\n                    \r\n                    \r\n                />\r\n                <span onClick={onSubmit} className=\"profileFormBtn nameUpdateBtn\" >\r\n                    Update \r\n                    \r\n                </span>\r\n                \r\n                <span className=\"profileFormBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                    Log Out\r\n                </span>\r\n                <span className=\"formSpace\"> </span>\r\n                \r\n                \r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\n\r\nconst CommentTImeVip = ({commentTimeArry}) => {\r\n    return(\r\n        <div className=\"commentTime\">\r\n            {commentTimeArry.toString().substr(0,22)}\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentTImeVip;","import { dbService } from \"fbase\";\r\nimport { doc, updateDoc, collection, onSnapshot,arrayUnion} from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport SingleCommentVip from \"components/SingleComment\";\r\nimport CommentTimeVip from \"components/CommentTimeVip\";\r\n\r\n\r\n\r\nconst CommentsVip = ({famcoMsgId, userObj,FamcoVipObj }) => {\r\n\r\n    const [NewComment, setNewComment] = useState(\"\");\r\n    const [allComments, setAllComments] = useState([]);\r\n    const [secreatKey, setSecreatKey] = useState(0);\r\n    const [currentDate, setCurrentDate] = useState(\"\");\r\n    const commentRef = doc(dbService, \"NewFamcoVip\", `${famcoMsgId}`) ;\r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n    const milsec = String(date.getMilliseconds()).padStart(2,\"0\");\r\n    \r\n    \r\n    const onCommentChange = ({ target: { value } }) => {\r\n        setNewComment(value);\r\n        };\r\n\r\n    const onCommentSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n\r\n        await updateDoc(commentRef,  {\r\n            comments : arrayUnion({\r\n                [userObj.displayName+(secreatKey.toFixed(2))] : NewComment,\r\n            })\r\n            //setCommentObj();\r\n        });\r\n        setSecreatKey(( Math.random() * (10 - 1) + 1 ));\r\n        \r\n        await updateDoc(commentRef,  {\r\n            commentsNumber : FamcoVipObj.commentsNumber+1,\r\n        });\r\n        setNewComment(\"\");\r\n\r\n        \r\n        await updateDoc(commentRef,  {\r\n            commentTime : arrayUnion({\r\n                [year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes + \" : \" + sec + \" @ \" + milsec] : userObj.displayName,\r\n            })\r\n        });\r\n    };\r\n\r\n    useEffect (() => { \r\n\r\n            const snapshotCommanderComment =  onSnapshot(collection(dbService, \"NewFamcoVip\"), \r\n            (snapshot) => {\r\n                const unsub = onSnapshot(doc(dbService, \"NewFamcoVip\", `${famcoMsgId}`), (doc) => {\r\n                    if(doc.data()){\r\n                        setAllComments(doc.data().comments);\r\n                       \r\n                    }\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(\"성공!\");\r\n                });\r\n\r\n\r\n                const snapshotCommanderDate =  onSnapshot(collection(dbService, \"NewFamcoVip\"), \r\n                (snapshot) => {\r\n                    const unsub = onSnapshot(doc(dbService, \"NewFamcoVip\", `${famcoMsgId}`), (doc) => {\r\n                        if(doc.data()){\r\n                            setCurrentDate(doc.data().commentTime);\r\n                            \r\n                        }\r\n                    });\r\n                },\r\n                (error) => {\r\n                    console.log(\"성공!\");\r\n                    });\r\n\r\n            }, []);\r\n\r\n    return(\r\n        <div>\r\n            \r\n            <div className=\"theWholeComments\">\r\n                <div  class= \"notranslate\" className=\"userAndComment\">\r\n                    {allComments.map((commentArry) => (\r\n                        <SingleCommentVip\r\n                            famcoMsgId={famcoMsgId}\r\n                            objKey={Object.keys(commentArry)} \r\n                            objValue={commentArry[Object.keys(commentArry)]}\r\n                            userObj={userObj} \r\n                        />\r\n                    ))}\r\n                </div>\r\n\r\n                <div class= \"notranslate\" className=\"onlyDate\">\r\n                    {currentDate&&currentDate.map((commentTimeArry) => (\r\n                        <CommentTimeVip\r\n                            commentTimeArry={Object.keys(commentTimeArry)}\r\n                        /> \r\n                    ))}\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <form onSubmit={onCommentSubmit} className=\"famcoMsgForm\">\r\n                <div className=\"commentForm\">\r\n                    <textarea \r\n                        class= \"comment__input\"\r\n                        onChange= {onCommentChange} \r\n                        value={NewComment} \r\n                        type=\"text\" \r\n                        placeholder=\"Write a comment\" \r\n                        maxLength=\"71\" \r\n                        required \r\n                        autoFocus\r\n                        >\r\n                    </textarea>\r\n                    <input type=\"submit\" value=\"Add\"  className=\"commentAdd\" />\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CommentsVip;","import { dbService } from \"fbase\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { storageService } from \"../fbase\";\r\nimport { doc, deleteDoc, updateDoc, collection, onSnapshot } from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt, faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {faCommentDots as emptyComments } from '@fortawesome/free-regular-svg-icons'\r\nimport heartIcon1 from \"../assets/heart1.png\";\r\nimport heartIcon2 from \"../assets/heart2.png\";\r\nimport cuteCrown from \"../assets/cuteCrown.png\";\r\nimport CommentsVip from \"components/CommentsVip\";\r\n\r\n\r\n\r\nconst FamcoVip = ({FamcoVipObj, isOwner, userObj}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(FamcoVipObj.text);\r\n    const famcoTextRef = doc(dbService, \"NewFamcoVip\", `${FamcoVipObj.id}`) ;\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\r\n    const [openComment, SetOpenComment] = useState(false);\r\n    const [numberOfComments, setNumberOfComments] = useState(0);\r\n\r\n    let didIlike = FamcoVipObj.likedName.indexOf(userObj.uid);\r\n    \r\n\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok= window.confirm(\"Are you sure you want to delete the famco message?\");\r\n        \r\n        if(ok){\r\n            await deleteDoc(famcoTextRef);\r\n            if(FamcoVipObj.attachmentUrl) {\r\n            await deleteObject(ref(storageService, FamcoVipObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(famcoTextRef, {\r\n            text: NewFamcoMsg,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        \r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewFamcoMsg(value);\r\n        \r\n    };\r\n\r\n    useEffect (() => {\r\n        const snapshotCommander =  onSnapshot(collection(dbService, \"NewFamcoVip\"), \r\n            (snapshot) => {\r\n                const unsub = onSnapshot(doc(dbService, \"NewFamcoVip\", FamcoVipObj.id), (doc) => {\r\n                    if(doc.data()){\r\n                        setNumberOfComments(doc.data().commentsNumber);\r\n                    }\r\n                });\r\n            },\r\n            (error) => {\r\n                console.log(\"성공!\");\r\n                });\r\n    },[]);\r\n    \r\n    \r\n\r\n    useEffect (() => {\r\n\r\n        if(alreadyLiked){\r\n        \r\n            if(didIlike <= 0){\r\n                    updateDoc(famcoTextRef, {\r\n                        likes:  FamcoVipObj.likes+1,\r\n                        likedName: FamcoVipObj.likedName +\",\"+userObj.uid,\r\n                    });\r\n                    \r\n                    \r\n                    \r\n            }\r\n\r\n            if(didIlike !== -1){\r\n                    if(FamcoVipObj.likes > 0){\r\n                        updateDoc(famcoTextRef, {\r\n                            likes: FamcoVipObj.likes-1,\r\n                            likedName: FamcoVipObj.likedName.replace((\",\"+userObj.uid),\"\"),\r\n                        });\r\n                        \r\n                    }\r\n                \r\n            }\r\n        }\r\n    },[isLiked]);\r\n        \r\n    const toggleLike = () => {\r\n        setAlreadyLiked(true);\r\n        setIsLiked((prev) => !prev);\r\n    }\r\n    \r\n    const toggleComment = () => SetOpenComment((prev) => !prev);\r\n    return(\r\n        <div className=\"famcoMsg \" >\r\n            {editing ? ( \r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container famcoMsgEdit\"> \r\n                    <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Edit your Famco message\" \r\n                    value={NewFamcoMsg} \r\n                    required\r\n                    autoFocus \r\n                    onChange={onChange}\r\n                    className=\"famcoMsgInput\"\r\n                    maxLength=\"120\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Update\"  className=\"formBtn\"/>\r\n                    \r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                ) : ( \r\n                <>  \r\n                        <img src= {cuteCrown} className=\"vipTag\" />\r\n                        \r\n                        <h5 className=\"FamcoMsgCreatedDate\">{FamcoVipObj.uploadedDate}</h5>\r\n                    \r\n\r\n                    <h4 className=\"famcoMsgText\">\r\n                        \r\n                    {FamcoVipObj.attachmentUrl && <img src={FamcoVipObj.attachmentUrl} className=\"famcoAttachedImg\"/>}\r\n                        \r\n                    </h4>\r\n                    <span class= \"notranslate\" >{FamcoVipObj.text}</span>\r\n                    \r\n                    \r\n                    <br/>\r\n                    \r\n                    \r\n\r\n                    \r\n                    {isOwner ? \r\n                        (   <span class= \"notranslate\">\r\n                                <h5 className=\"famcoOwner\"> {userObj.displayName}</h5>\r\n                            </span>\r\n                        ) : (\r\n                            <span class= \"notranslate\">\r\n                                <h5 className=\"famcoOtherOwners\"> {FamcoVipObj.name}</h5>\r\n                            </span>\r\n                            )\r\n                    }\r\n                    {isOwner && (\r\n                        <div className=\"famcoMsg__actions\"> \r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                        \r\n                    {userObj.displayName == \"ADMIN\" && (\r\n                            <span className=\"famcoMsg__actions superDelete\" onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>  \r\n                    )}\r\n\r\n                    <div className=\"FamcoMsgLikes\">\r\n                        <img src={didIlike !== -1 ?heartIcon2:heartIcon1} \r\n                            onClick={toggleLike}\r\n                        /> \r\n                        <span class= \"notranslate\">{FamcoVipObj.likes}</span>\r\n                    </div>\r\n                    {openComment ?(\r\n                            <> \r\n                            <FontAwesomeIcon onClick={toggleComment} icon={faCommentDots }  className=\"FamcoComments\"/>\r\n                            <span class= \"notranslate\" className=\"numberOfComments\">\r\n                                {numberOfComments}\r\n                            </span>\r\n\r\n                            <div style={{ marginTop: 30 }}>     \r\n                                \r\n                                    <CommentsVip \r\n                                    key={NewFamcoMsg.id} \r\n                                    famcoMsgId= {FamcoVipObj.id}\r\n                                    userObj={userObj}\r\n                                    FamcoVipObj={FamcoVipObj}\r\n                                    />\r\n                            </div>\r\n                        </>\r\n                            ) : (\r\n                            <>\r\n                                <FontAwesomeIcon onClick={toggleComment} icon={emptyComments} className=\"FamcoComments\" />\r\n                                \r\n                                <span class= \"notranslate\" className=\"numberOfComments\">\r\n                                {numberOfComments}\r\n                                </span> \r\n                            </>\r\n                            )\r\n                        }\r\n\r\n                </>\r\n            )}\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default FamcoVip;","import FamcoVip from \"components/Famcovip\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { addDoc,doc, collection,getDoc, getDocs, query, onSnapshot, orderBy, where, } from \"@firebase/firestore\";\r\nimport {ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(\"\");\r\n    const [NewFamcoMsges, setNewFamcoMsges] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [isAttachmentExist, SetIsAttachmentExist] = useState(false);\r\n    const [isUserInfoExist, SetIsUserInfoExist] = useState(false);\r\n    const [isUserVip, SetIsUserVip] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false); \r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    //const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n\r\n    const getNewFamcoMsges = async() => {\r\n    const DbNewFamcoMsges = query(collection(dbService,\"NewFamcoVip\"));\r\n    const querySnapshot = await getDocs(DbNewFamcoMsges);\r\n    querySnapshot.forEach((doc) => {\r\n        const newFamcoMsgObj = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n                \r\n        }\r\n        setNewFamcoMsges((prev) => [newFamcoMsgObj, ...prev]);\r\n    });\r\n    };\r\n    \r\n    \r\n\r\n    const checkVip = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            );\r\n            const getDocuments = await getDocs(q);\r\n            \r\n            getDocuments.forEach(async(document) => {\r\n                const docRef = doc(dbService, \"UserInfo\", `${document.id}`);\r\n                const getDocument = await getDoc(docRef);\r\n                    if(getDocument.data().vip === \"jandc914\"){\r\n                        SetIsUserVip(true);\r\n                    }else {\r\n                        \r\n                    }\r\n            });\r\n    }\r\n\r\n\r\n    const checkUserInfo = async() =>{\r\n        checkVip();\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach(() => {\r\n                SetIsUserInfoExist(true);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n    useEffect (() => { \r\n        \r\n        checkUserInfo();\r\n        const q = query(\r\n            collection(dbService, \"NewFamcoVip\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n            );\r\n            onSnapshot(q, (snapshot) => {\r\n            const famcoArr = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            }));\r\n            setNewFamcoMsges(famcoArr);\r\n            });\r\n            \r\n            }, []);\r\n\r\n    const onSubmit = async(event) => {       \r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        // 여기에 업로드 어태치먼트가 이상해서그랭\r\n        const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n        attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n        \r\n        }\r\n        const newfamcoPosting = {\r\n            text: NewFamcoMsg,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            name: userObj.displayName,\r\n            uploadedDate:  year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes,\r\n            likes: 0,\r\n            likedName: \"\",\r\n            commentsNumber:0,\r\n            comments:[],\r\n            commentTime:[],\r\n            attachmentUrl\r\n            \r\n        };\r\n        try {\r\n            await addDoc(collection(dbService, \"NewFamcoVip\"), newfamcoPosting);\r\n            setIsLoading(false);\r\n            } catch (error) {\r\n            }\r\n            \r\n            setNewFamcoMsg(\"\");\r\n            setAttachment(\"\");\r\n            SetIsAttachmentExist(false);\r\n    };\r\n    const onChange = ({ target: { value } }) => {\r\n        setNewFamcoMsg(value);\r\n        };\r\n    \r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n                } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        SetIsAttachmentExist(true);\r\n        reader.readAsDataURL(theFile);\r\n        \r\n    };\r\n\r\n\r\n    const onClearAttachment = (evnet) => {\r\n        SetIsAttachmentExist(false);\r\n        setAttachment(\"\");\r\n    }\r\n    \r\n    return (\r\n        <>\r\n    {isUserVip ? (    \r\n    <div className=\"container\">\r\n\r\n        <span className=\"vip__span\">Welcome to VIP room!</span>\r\n        \r\n        <form onSubmit ={onSubmit} className=\"famcoMsgForm\">\r\n        <div className=\"famcoMsgInput__container\">\r\n            {isUserInfoExist ? ( \r\n                <>\r\n            <textarea\r\n                className=\"famcoMsgInput__input\"\r\n                value={NewFamcoMsg} \r\n                onChange= {onChange} \r\n                type=\"text\" \r\n                placeholder=\" What's on your mind?\" \r\n                maxLength=\"120\" \r\n                required\r\n            />\r\n\r\n            {isLoading ? ( \r\n                <div className=\"loading\"></div>\r\n            ) : (\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Post\" \r\n                    className=\"famcoMsgInput__post\"\r\n                />\r\n            )}\r\n            {isAttachmentExist ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                <label htmlFor=\"attach-file\" className=\"famcoMsgInput__label\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n                    <span> Add photo</span>  \r\n                </label>\r\n                <input\r\n                className=\"famcoMsgInput__labelChild\"\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                />\r\n                </>\r\n            )}\r\n\r\n            </>\r\n            ):(\r\n                <div className=\"noUserName\">Add infomation on your profile to start</div>\r\n            )}\r\n            {attachment && (\r\n            <div className=\"famcoMsgForm__attachment\">\r\n                <img \r\n                src={attachment}\r\n                />\r\n            <div className=\"famcoMsgForm__clear\" onClick={onClearAttachment}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>\r\n            )}\r\n            </div>\r\n            \r\n        </form>\r\n        <div  style={{ marginTop: 30 }}>     \r\n            {NewFamcoMsges.map((NewFamcoMsg) => (\r\n                <FamcoVip \r\n                key={NewFamcoMsg.id} \r\n                FamcoVipObj={NewFamcoMsg} \r\n                isOwner={NewFamcoMsg.creatorId === userObj.uid}\r\n                userObj={userObj}\r\n                />\r\n            ))}\r\n        </div>\r\n        \r\n    </div>\r\n    ) : ( <span className=\"vip__span\"> You need the access for VIP room.</span> )}\r\n    </>\r\n    );\r\n    \r\n};\r\nexport default Home;","import {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport About from \"../routes/About\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport Vip from \"routes/Vip\";\r\n\r\n\r\n\r\nconst AppRouther = ({refreshUser,isLoggedIn, userObj, NewFamcoMsg}) => {\r\n    return(\r\n        <Router >\r\n            \r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            \r\n                {isLoggedIn ? (\r\n                    \r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 100,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/profile\" >\r\n                        <Profile userObj={userObj}  refreshUser={refreshUser} FamcoMsgObj={NewFamcoMsg} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/about\" >\r\n                        <About userObj={userObj} />\r\n                    </Route>\r\n\r\n                    <Route eact path=\"/vip\" >\r\n                        <Vip userObj={userObj} />\r\n                    </Route>\r\n\r\n                </div>\r\n                \r\n                    ): (\r\n                <>\r\n                    <Route exact path=\"/\">    \r\n                        <Auth />\r\n                    </Route>\r\n                </>\r\n                )}\r\n            \r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouther;","import React, { useEffect, useState} from \"react\";\nimport AppRouther from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(async(user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          vip:\"\",\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        } else {\n          setUserObj(null);\n        }\n      setInit(true);\n    });\n\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n      setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      vip:\"\",\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n\n  return (\n    <>\n    {init ? <AppRouther\n      refreshUser={refreshUser} \n      isLoggedIn={Boolean(userObj)} \n      userObj={userObj}/> : \"Initializing...\"}\n      <span class=\"notranslate\">\n      <footer className=\"footer\">&copy; {new Date().getFullYear()} Famco</footer>\n      </span>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles/style.css\";\n//import firebase from \"../firebase\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}