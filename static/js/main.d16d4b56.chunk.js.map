{"version":3,"sources":["fbase.js","assets/FAMCO.png","routes/Auth.js","assets/heart1.png","assets/heart2.png","components/Famcomsg.js","routes/Home.js","assets/kokoatalk2.PNG","assets/checkInvestingScore.PNG","routes/About.js","assets/cuteCrown.png","components/Navigation.js","routes/Profile.js","components/Famcovip.js","routes/Vip.js","components/Router.js","components/App.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","getAuth","dbService","getFirestore","storageService","getStorage","Auth","userObj","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","console","log","className","src","FAMCO","type","placeholder","required","onClick","prev","Famco","FamcoMsgObj","isOwner","editing","setEditing","text","NewFamcoMsg","setNewFamcoMsg","famcoTextRef","doc","id","isAdmin","setIsAdmin","isLiked","setIsLiked","alreadyLiked","setAlreadyLiked","openComment","SetOpenComment","didIlike","likedName","indexOf","uid","onDeleteClick","window","confirm","deleteDoc","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","useEffect","likes","replace","toggleComment","autoFocus","maxLength","uploadedDate","heartIcon2","heartIcon1","icon","faCommentDots","emptyComments","displayName","faBullhorn","faPencilAlt","faTrash","Home","NewFamcoMsges","setNewFamcoMsges","attachment","setAttachment","isAttachmentExist","SetIsAttachmentExist","isUserInfoExist","SetIsUserInfoExist","isLoading","setIsLoading","date","Date","year","String","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","checkUserInfo","q","query","collection","where","getDocs","forEach","orderBy","onSnapshot","snapshot","famcoArr","docs","map","data","attachmentRef","uuidv4","uploadString","uploadFile","getDownloadURL","newfamcoPosting","createdAt","now","creatorId","addDoc","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","evnet","faTimes","style","marginTop","About","faCode","href","checkInvestingScore","kokoatalk2","Navigation","scrollTo","isUserVip","SetIsUserVip","checkVip","document","docRef","getDoc","vip","to","faUser","color","size","faInfoCircle","cuteCrown","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","setNewUserInfo","duplication","firstLoginWithGoogle","isNicknameExist","searchingSameIdQuery","duplicationForNickname","googleUserinfoUpdate","currentUser","providerData","providerId","addNewGoogleUserInfoObj","whatPostLiked","alert","userInfoArr","length","addNewUserInfoObj","updateProfile","trim","signOut","push","FamcoVip","FamcoVipObj","AppRouther","isLoggedIn","maxWidth","width","margin","display","justifyContent","exact","path","Profile","eact","Vip","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d16d4b56.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport \"firebase/database\"\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n//import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY, \r\n    authDomain:process.env.REACT_APP_AUTH_DOMAIN ,\r\n    projectId:process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n    };\r\n\r\n    const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n    \r\n    export const authService = getAuth(firebaseApp);\r\n    export const dbService = getFirestore();\r\n    export const storageService = getStorage();","export default __webpack_public_path__ + \"static/media/FAMCO.79983dba.png\";","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, signInWithPopup, getAuth } from 'firebase/auth';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\nimport FAMCO from \"../assets/FAMCO.png\";\r\n\r\n\r\nconst Auth = ({userObj}) => {    \r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n    const onChange = (event) => {\r\n        const {\r\n            target: {name,value},\r\n        } = event;\r\n        if(name ===\"email\") {\r\n            setEmail(value);\r\n        }else if (name === \"password\") {\r\n            setPassword(value);\r\n        }\r\n        \r\n    };\r\n    let data;\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            \r\n        if(newAccount){\r\n            data = await createUserWithEmailAndPassword(authService, email, password) ;\r\n        } else {\r\n            data = await signInWithEmailAndPassword(authService, email, password);\r\n            \r\n        } \r\n        \r\n    }   catch (error) {\r\n        setError(error.message);\r\n    }\r\n    };\r\n\r\nconst toggleAccount = () => setNewAccount((prev) => !prev);\r\nconst onSocialClick = async (event) => {\r\n    const {\r\n    target: { name }} = event;\r\n    let provider;\r\n    try {\r\n        \r\n    if (name === \"google\") {\r\n        \r\n    provider = new GoogleAuthProvider();\r\n    const result = await signInWithPopup(authService, provider);\r\n    const credential = GoogleAuthProvider.credentialFromResult(result);\r\n    // const token = credential.accessToken;\r\n    } \r\n    } catch (error) {\r\n    console.log(error);\r\n    \r\n    }\r\n    };\r\nreturn (\r\n    <div className=\"authContainer\">\r\n        <img src={FAMCO}\r\n            className=\"authIcon\"\r\n        />\r\n\r\n    <form onSubmit={onSubmit}  className=\"container\">\r\n        <input \r\n            name=\"email\" \r\n            type=\"email\" \r\n            placeholder=\"Email\" \r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            required\r\n        />\r\n        <input \r\n            name=\"password\"\r\n            type=\"password\" \r\n            placeholder=\"Password\" \r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n            required\r\n        />\r\n        <span type=\"submit\" \r\n            className=\"authInput authSubmit\" \r\n        >\r\n            {newAccount ? \"Create Account\" : \"Log In\"}\r\n        </span>\r\n            \r\n            \r\n        {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount? \"Sign in\" : \"Create Account\"}\r\n    </span>\r\n    <div className=\"authBtns\">\r\n        <button type=\"button\" onClick={onSocialClick} name=\"google\" className=\"authBtn authBtn__span\">\r\n            Continue with Google\r\n        </button>\r\n    </div>\r\n</div>\r\n);\r\n};\r\nexport default Auth;","export default __webpack_public_path__ + \"static/media/heart1.5041d0a0.png\";","export default __webpack_public_path__ + \"static/media/heart2.cb2fc326.png\";","import { dbService } from \"fbase\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { storageService } from \"../fbase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt, faBullhorn, faCommentDots, } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {faCommentDots as emptyComments } from '@fortawesome/free-regular-svg-icons'\r\nimport heartIcon1 from \"../assets/heart1.png\";\r\nimport heartIcon2 from \"../assets/heart2.png\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Famco = ({FamcoMsgObj, isOwner, userObj}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(FamcoMsgObj.text);\r\n    const famcoTextRef = doc(dbService, \"NewFamcoMsg\", `${FamcoMsgObj.id}`) ;\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    \r\n    \r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\r\n    const [openComment, SetOpenComment] = useState(false);\r\n    \r\n\r\n    let didIlike = FamcoMsgObj.likedName.indexOf(userObj.uid);\r\n    \r\n\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok= window.confirm(\"Are you sure you want to delete the famco message?\");\r\n        \r\n        if(ok){\r\n            await deleteDoc(famcoTextRef);\r\n            if(FamcoMsgObj.attachmentUrl) {\r\n            await deleteObject(ref(storageService, FamcoMsgObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(famcoTextRef, {\r\n            text: NewFamcoMsg,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        \r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewFamcoMsg(value);\r\n        \r\n    };\r\n\r\n    \r\n    \r\n\r\n    useEffect (() => {\r\n\r\n        if(FamcoMsgObj.name === \"ADMIN\"){\r\n            setIsAdmin(true);\r\n            \r\n        }else{\r\n            setIsLiked(false);\r\n        }\r\n\r\n        if(alreadyLiked){\r\n        \r\n            if(didIlike <= 0){\r\n                \r\n                    updateDoc(famcoTextRef, {\r\n                        likes:  FamcoMsgObj.likes+1,\r\n                        likedName: FamcoMsgObj.likedName +\",\"+userObj.uid,\r\n                    });\r\n                    \r\n                    \r\n                    \r\n            }\r\n\r\n            if(didIlike !== -1){\r\n                \r\n                    if(FamcoMsgObj.likes > 0){\r\n                        updateDoc(famcoTextRef, {\r\n                            likes: FamcoMsgObj.likes-1,\r\n                            likedName: FamcoMsgObj.likedName.replace((\",\"+userObj.uid),\"\"),\r\n                        });\r\n                        \r\n                    }\r\n                \r\n            }\r\n        }\r\n    },[isLiked]);\r\n        \r\n    const toggleLike = () => {\r\n        setAlreadyLiked(true);\r\n        setIsLiked((prev) => !prev);\r\n    }\r\n\r\n    const toggleComment = () => SetOpenComment((prev) => !prev);\r\n    \r\n    return(\r\n        <div className=\"famcoMsg\">\r\n            {editing ? ( \r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container famcoMsgEdit\"> \r\n                    <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Edit your Famco message\" \r\n                    value={NewFamcoMsg} \r\n                    required\r\n                    autoFocus \r\n                    onChange={onChange}\r\n                    className=\"famcoMsgInput\"\r\n                    maxLength=\"120\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Update\"  className=\"formBtn\" />\r\n                    \r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                ) : ( \r\n                <>  \r\n                    \r\n                    <h5 className=\"FamcoMsgCreatedDate\">{FamcoMsgObj.uploadedDate}</h5>\r\n                    \r\n                    <h4 className=\"famcoMsgText\">\r\n                        \r\n                    {FamcoMsgObj.attachmentUrl && <img src={FamcoMsgObj.attachmentUrl} className=\"famcoAttachedImg\"/>}\r\n                        \r\n                    </h4>\r\n                    {FamcoMsgObj.text}\r\n                    <br/>\r\n                    <br/>\r\n                    <div className=\"FamcoMsgLikes\">\r\n                        <img src={didIlike !== -1 ?heartIcon2:heartIcon1} \r\n                            onClick={toggleLike}\r\n                        /> \r\n                        <span>{FamcoMsgObj.likes}</span>\r\n                    </div>\r\n                    {openComment ?(    \r\n                        <FontAwesomeIcon onClick={toggleComment} icon={faCommentDots }  className=\"FamcoComments\"/>\r\n                        ) : (\r\n                        <FontAwesomeIcon onClick={toggleComment} icon={emptyComments } className=\"FamcoComments\" /> \r\n                        )\r\n                    }\r\n                    {isOwner ?(\r\n                        <h5 className=\"famcoOwner\"> {userObj.displayName}</h5>\r\n                        ) : (\r\n                        <h5 className=\"famcoOtherOwners\"> {FamcoMsgObj.name}</h5>       \r\n                        )\r\n                    }\r\n\r\n                    {isAdmin? <FontAwesomeIcon icon={faBullhorn}  className=\"megaphone\" /> : <> </> }\r\n                    {isOwner && (\r\n                        <div className=\"famcoMsg__actions\"> \r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>                            \r\n                        </div>\r\n                        )}\r\n                    {userObj.displayName == \"ADMIN\" && (\r\n                            <span className=\"famcoMsg__actions superDelete\" onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>  \r\n                        )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Famco;","import Famco from \"components/Famcomsg\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { addDoc, collection, getDocs, query, onSnapshot, orderBy, where, } from \"@firebase/firestore\";\r\nimport {ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(\"\");\r\n    const [NewFamcoMsges, setNewFamcoMsges] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [isAttachmentExist, SetIsAttachmentExist] = useState(false);\r\n    const [isUserInfoExist, SetIsUserInfoExist] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false); \r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    //const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n\r\n    const getNewFamcoMsges = async() => {\r\n    const DbNewFamcoMsges = query(collection(dbService,\"NewFamcoMsg\"));\r\n    const querySnapshot = await getDocs(DbNewFamcoMsges);\r\n    querySnapshot.forEach((doc) => {\r\n        const newFamcoMsgObj = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n                \r\n        }\r\n        setNewFamcoMsges((prev) => [newFamcoMsgObj, ...prev]);\r\n    });\r\n    };\r\n    \r\n    \r\n\r\n    const checkUserInfo = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach(() => {\r\n                SetIsUserInfoExist(true);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    useEffect (() => { \r\n        \r\n        checkUserInfo();\r\n        const q = query(\r\n            collection(dbService, \"NewFamcoMsg\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n            );\r\n            onSnapshot(q, (snapshot) => {\r\n            const famcoArr = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            }));\r\n            setNewFamcoMsges(famcoArr);\r\n            });\r\n            \r\n            }, []);\r\n\r\n    const onSubmit = async(event) => {       \r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        // 여기에 업로드 어태치먼트가 이상해서그랭\r\n        const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n        attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n        \r\n        }\r\n        const newfamcoPosting = {\r\n            text: NewFamcoMsg,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            name: userObj.displayName,\r\n            uploadedDate:  year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes,\r\n            likes: 0,\r\n            likedName: \"\",\r\n            attachmentUrl\r\n            \r\n        };\r\n        try {\r\n            await addDoc(collection(dbService, \"NewFamcoMsg\"), newfamcoPosting);\r\n            setIsLoading(false);\r\n            } catch (error) {\r\n            }\r\n            \r\n            setNewFamcoMsg(\"\");\r\n            setAttachment(\"\");\r\n            SetIsAttachmentExist(false);\r\n            \r\n    };\r\n    const onChange = ({ target: { value } }) => {\r\n        setNewFamcoMsg(value);\r\n        };\r\n    \r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n                } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        SetIsAttachmentExist(true);\r\n        reader.readAsDataURL(theFile);\r\n        \r\n    };\r\n\r\n\r\n    const onClearAttachment = (evnet) => {\r\n        SetIsAttachmentExist(false);\r\n        setAttachment(\"\");\r\n    }\r\n    \r\n    return (\r\n        \r\n    <div className=\"container\">\r\n        \r\n        <form onSubmit ={onSubmit} className=\"famcoMsgForm\">\r\n        <div className=\"famcoMsgInput__container\">\r\n            {isUserInfoExist ? ( \r\n                <>\r\n            <textarea\r\n                className=\"famcoMsgInput__input\"\r\n                value={NewFamcoMsg} \r\n                onChange= {onChange} \r\n                type=\"text\" \r\n                placeholder=\" What's on your mind?\" \r\n                maxLength=\"120\" \r\n                required\r\n            />\r\n            {isLoading ? ( \r\n                <div className=\"loading\"></div>\r\n            ) : (\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Post\" \r\n                    className=\"famcoMsgInput__post\"\r\n                />\r\n            )}\r\n            \r\n\r\n            {isAttachmentExist ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                <label htmlFor=\"attach-file\" className=\"famcoMsgInput__label\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n                    <span> Add photo</span>  \r\n                </label>\r\n                <input\r\n                className=\"famcoMsgInput__labelChild\"\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                />\r\n                </>\r\n            )}\r\n\r\n            </>\r\n            ):(\r\n                <div className=\"noUserName\">Add infomation on your profile to start</div>\r\n            )}\r\n            {attachment && (\r\n            <div className=\"famcoMsgForm__attachment\">\r\n                <img \r\n                src={attachment}\r\n                />\r\n            <div className=\"famcoMsgForm__clear\" onClick={onClearAttachment}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>\r\n            )}\r\n            </div>\r\n            \r\n        </form>\r\n        <div style={{ marginTop: 30 }}>     \r\n            {NewFamcoMsges.map((NewFamcoMsg) => (\r\n                <Famco \r\n                key={NewFamcoMsg.id} \r\n                FamcoMsgObj={NewFamcoMsg} \r\n                isOwner={NewFamcoMsg.creatorId === userObj.uid}\r\n                userObj={userObj}\r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/kokoatalk2.f2884164.PNG\";","export default __webpack_public_path__ + \"static/media/checkInvestingScore.52797942.PNG\";","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus,faCode } from \"@fortawesome/free-solid-svg-icons\";\r\nimport kokoatalk2 from \"../assets/kokoatalk2.PNG\";\r\nimport checkInvestingScore from \"../assets/checkInvestingScore.PNG\";\r\n\r\n\r\n\r\n\r\nconst About = () => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            \r\n        <div className=\"container\">\r\n\r\n                <div className=\"aboutHeader\">\r\n                    <span>Welcome to Famco world! </span>\r\n                    <span>Share your story to the world. </span>\r\n                </div>\r\n\r\n\r\n                <div className=\"aboutFamco\">\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                    <span>Famco is a Mobile-Friendly web application that people can share stories.\r\n                        This web is built on React(hook) and Firebase.\r\n                    </span>\r\n                    \r\n                    \r\n                </div>\r\n                    \r\n                <div className=\"aboutMe\">\r\n                <FontAwesomeIcon icon={faCode} />\r\n                    <span>Hello, I am Jay.</span>\r\n                    <span>Please check my other web-apps out below.</span>\r\n                </div>\r\n\r\n                <div className=\"aboutPortfolio\">\r\n                    <span>- Javior( Vanilla JS & CSS & HTML) -</span>\r\n                    <a href=\"https://jay2009.github.io/chrome_app/index.html\"> \r\n                        <img src={checkInvestingScore} className=\"kokoatalk2\"/> \r\n                    </a>\r\n                    <span>Check your stock investment score ! </span><br/>\r\n                    <a href=\"https://jay2009.github.io/chrome_app/index.html\">Link </a>\r\n                </div>\r\n\r\n                <div className=\"aboutPortfolio\">\r\n                    <span>- Kokoa clone(CSS & HTML) -</span>\r\n                    <a href=\"https://jay2009.github.io/kokoa-clone-2020/\"> \r\n                        <img src={kokoatalk2} className=\"kokoatalk2\"/> \r\n                    </a>\r\n                    <span>Dosen't it look pretty familiar to you? </span><br/>\r\n                    <a href=\"https://jay2009.github.io/kokoa-clone-2020/\">Link </a>\r\n                </div>\r\n                \r\n                <div className=\"aboutContact\">\r\n                    <span>Check other projects on</span>\r\n                    <span>Github : <a href=\"https://github.com/Jay2009\">https://github.com/Jay2009 </a></span> \r\n                    <br/>\r\n                    <span>Contact : jaem2009@naver.com </span>\r\n                </div>\r\n        \r\n            \r\n        \r\n        </div>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport default About;","export default __webpack_public_path__ + \"static/media/cuteCrown.8d0b09b9.png\";","import React, { useState, useEffect } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUser, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { doc, collection, getDocs,getDoc, query, where, } from \"@firebase/firestore\";\r\nimport { dbService } from \"fbase\";\r\nimport cuteCrown from \"../assets/cuteCrown.png\";\r\nimport FAMCO from \"../assets/FAMCO.png\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Navigation = ({userObj}) => {\r\n\r\n    const onClick = () => {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    const [isUserVip, SetIsUserVip] = useState(false);\r\n\r\n    const checkVip = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            );\r\n            const getDocuments = await getDocs(q);\r\n            \r\n            getDocuments.forEach(async(document) => {\r\n                const docRef = doc(dbService, \"UserInfo\", `${document.id}`);\r\n                const getDocument = await getDoc(docRef);\r\n                    if(getDocument.data().vip === \"jandc914\"){\r\n                        SetIsUserVip(true);\r\n                    }else {\r\n                        \r\n                    }\r\n            });\r\n    }\r\n\r\n\r\nuseEffect (() => { \r\n        \r\n    checkVip();\r\n        \r\n        }, []);\r\n\r\n\r\n\r\n\r\nreturn (\r\n<nav className=\"navigation\">\r\n    <div className=\"navigation__position\">\r\n    <ul  className =\"navigation__Icons\">\r\n        \r\n        <li className=\"navLogo\">\r\n            <Link \r\n            className=\"logo\" \r\n            to=\"/\" \r\n            onClick={onClick}\r\n            >\r\n            <img src={FAMCO}></img>\r\n            </Link>\r\n        </li>\r\n\r\n        <li className=\"navUser\">\r\n            <Link \r\n            to=\"/profile\"\r\n            onClick={onClick}\r\n            > \r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n        \r\n        <li className=\"navAbout\">\r\n            <Link\r\n            to=\"/about\"\r\n            onClick={onClick}\r\n            >\r\n            <FontAwesomeIcon icon={faInfoCircle} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link>\r\n        </li>\r\n\r\n        \r\n    </ul>\r\n\r\n\r\n        \r\n            <span className=\"displayUserName\">\r\n            {userObj.displayName\r\n                ? `${userObj.displayName}`\r\n                : \"Profile\"}\r\n            </span>\r\n\r\n            \r\n        \r\n\r\n        {isUserVip ? (\r\n        <li className=\"navVip\">\r\n            <Link \r\n            to=\"/vip\"\r\n            onClick={onClick}\r\n            > \r\n            <img src={cuteCrown}/>\r\n            </Link>\r\n        </li>\r\n        ):( <></> )\r\n        }\r\n\r\n    \r\n    </div>\r\n</nav>\r\n);\r\n};\r\n\r\n\r\nexport default Navigation;","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport { doc, updateDoc,addDoc } from \"firebase/firestore\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router\";\r\nimport { collection, getDocs, query, where,onSnapshot, orderBy} from \"@firebase/firestore\";\r\nimport { updateProfile } from \"@firebase/auth\";\r\n\r\n\r\n\r\nexport default ({refreshUser,userObj}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [NewUserInfo, setNewUserInfo] = useState([]);\r\n    let duplication = false;\r\n    let firstLoginWithGoogle = false;\r\n    let isNicknameExist = false;\r\n\r\n    const getUpdatedUsersInfo = async() => {\r\n    const DbUpdatedUsersInfo = query(collection(dbService,\"UserInfo\"));\r\n    const querySnapshot = await getDocs(DbUpdatedUsersInfo);\r\n    \r\n    querySnapshot.forEach((doc) => {\r\n        const updateUsersInfo = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n        }\r\n        setNewUserInfo((prev) => [updateUsersInfo, ...prev]);\r\n        });\r\n    };\r\n\r\n    const searchingSameIdQuery = async() =>{\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach((document) => {\r\n                firstLoginWithGoogle = true;\r\n                duplication = true;\r\n            });\r\n    }\r\n\r\n    const duplicationForNickname = async() =>{\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"name\", \"==\", newDisplayName)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach((document) => {\r\n                isNicknameExist = true;\r\n            });\r\n    }\r\n    \r\n    ///////// 이곳 if 문에 auth 에서 @@@구글@@@@@ 로 접속 하였을때를 조건으로 만들어야함 ..........\r\n    const googleUserinfoUpdate = async() => {\r\n        const googleProvider = authService.currentUser.providerData[0].providerId;\r\n        if (googleProvider === \"google.com\" ){\r\n            await searchingSameIdQuery();\r\n            \r\n            if (firstLoginWithGoogle === false){\r\n                \r\n                await duplicationForNickname();\r\n                if (isNicknameExist === false){\r\n                    const addNewGoogleUserInfoObj = {\r\n                    createdAt: Date.now(),\r\n                    creatorId: userObj.uid ,\r\n                    name: newDisplayName,\r\n                    whatPostLiked : \"\"\r\n                    }\r\n                    try {\r\n                        const docRef = await addDoc(collection(dbService, \"UserInfo\"),addNewGoogleUserInfoObj);\r\n                    } catch (error) {\r\n                }\r\n            }else{ alert(\" nickname is already in use.\");\r\n            setNewDisplayName(\"\");\r\n        }\r\n        }\r\n        }\r\n    }\r\n    \r\n\r\n    useEffect (() => {\r\n    const q = query(\r\n        collection(dbService, \"UserInfo\"),\r\n        orderBy(\"createdAt\", \"desc\")\r\n        );\r\n        onSnapshot(q, (snapshot) => {\r\n        const userInfoArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n            \r\n        }));\r\n        setNewUserInfo(userInfoArr);\r\n        \r\n        });\r\n\r\n            googleUserinfoUpdate();\r\n            }, []);\r\n            \r\n    \r\n\r\n    const onLogOutClick = () =>{\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value.trim().replace(/[^A-Za-z]/ig, ''));\r\n        \r\n    };\r\n    \r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(newDisplayName.length > 2){\r\n            \r\n                //if (userObj.displayName !== newDisplayName)  {\r\n                    await searchingSameIdQuery();\r\n                        \r\n                    const addNewUserInfoObj = {\r\n                                creatorId: userObj.uid ,\r\n                                name: newDisplayName,\r\n                                createdAt: Date.now(),\r\n                                whatPostLiked : \"\"\r\n                            }\r\n                            \r\n                    if(duplication === false){\r\n                        await duplicationForNickname();\r\n                        if(isNicknameExist === false){\r\n                                try { \r\n                                    await addDoc(collection(dbService, \"UserInfo\"),addNewUserInfoObj);\r\n                                    } catch (error) {\r\n                                    }\r\n                                    await updateProfile(await authService.currentUser, {\r\n                                        displayName: newDisplayName,\r\n                                    });\r\n                        }else{\r\n                            alert(\"Nick name is already in use\");\r\n                            setNewDisplayName(\"\");\r\n                        }\r\n                    }else{\r\n                        await duplicationForNickname();\r\n                        if(isNicknameExist === false){\r\n                        const q = query(\r\n                            collection(dbService, \"UserInfo\"),\r\n                            where(\"creatorId\", \"==\", userObj.uid)\r\n                            );\r\n                            const querySnapshot = await getDocs(q);\r\n                            querySnapshot.forEach(async(document) => {\r\n                                await updateDoc(doc(dbService, \"UserInfo\", `${document.id}`), {\r\n                                name: newDisplayName,\r\n                                });\r\n                            });\r\n                            await updateProfile(await authService.currentUser, {\r\n                                displayName: newDisplayName,\r\n                            });\r\n                            alert(\"Update success !\");\r\n                        }else {\r\n                            alert(\"the user nickname already in use\");\r\n                            setNewDisplayName(\"\");\r\n                        }\r\n                        }\r\n                    \r\n                    //}\r\n        refreshUser(newDisplayName);\r\n        } else{\r\n            alert(\"Name should be more than 2 chracters\");\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n                <span className= \"onlyEnglish\">\r\n                    Please, write your name only in English\r\n                </span>\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Write your user name\"\r\n                    value={newDisplayName}\r\n                    maxLength=\"12\"\r\n                    required\r\n                    autoFocus\r\n                    className=\"profileFormInput\"\r\n                    \r\n                    \r\n                />\r\n                <span onClick={onSubmit} className=\"profileFormBtn nameUpdateBtn\" >\r\n                    Update \r\n                    \r\n                </span>\r\n                \r\n                <span className=\"profileFormBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                    Log Out\r\n                </span>\r\n                <span className=\"formSpace\"> </span>\r\n                \r\n                \r\n        </div>\r\n    );\r\n};","import { dbService } from \"fbase\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { storageService } from \"../fbase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt, faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {faCommentDots as emptyComments } from '@fortawesome/free-regular-svg-icons'\r\n\r\nimport heartIcon1 from \"../assets/heart1.png\";\r\nimport heartIcon2 from \"../assets/heart2.png\";\r\nimport cuteCrown from \"../assets/cuteCrown.png\";\r\n\r\n\r\n\r\nconst FamcoVip = ({FamcoVipObj, isOwner, userObj}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(FamcoVipObj.text);\r\n    const famcoTextRef = doc(dbService, \"NewFamcoVip\", `${FamcoVipObj.id}`) ;\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [alreadyLiked, setAlreadyLiked] = useState(false);\r\n    const [openComment, SetOpenComment] = useState(false);\r\n\r\n    let didIlike = FamcoVipObj.likedName.indexOf(userObj.uid);\r\n    \r\n\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok= window.confirm(\"Are you sure you want to delete the famco message?\");\r\n        \r\n        if(ok){\r\n            await deleteDoc(famcoTextRef);\r\n            if(FamcoVipObj.attachmentUrl) {\r\n            await deleteObject(ref(storageService, FamcoVipObj.attachmentUrl));\r\n            }\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(famcoTextRef, {\r\n            text: NewFamcoMsg,\r\n        });\r\n        setEditing(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        \r\n        const {\r\n            target: {value},\r\n        } = event;\r\n        setNewFamcoMsg(value);\r\n        \r\n    };\r\n\r\n    \r\n    \r\n\r\n    useEffect (() => {\r\n\r\n        if(alreadyLiked){\r\n        \r\n            if(didIlike <= 0){\r\n                    updateDoc(famcoTextRef, {\r\n                        likes:  FamcoVipObj.likes+1,\r\n                        likedName: FamcoVipObj.likedName +\",\"+userObj.uid,\r\n                    });\r\n                    \r\n                    \r\n                    \r\n            }\r\n\r\n            if(didIlike !== -1){\r\n                    if(FamcoVipObj.likes > 0){\r\n                        updateDoc(famcoTextRef, {\r\n                            likes: FamcoVipObj.likes-1,\r\n                            likedName: FamcoVipObj.likedName.replace((\",\"+userObj.uid),\"\"),\r\n                        });\r\n                        \r\n                    }\r\n                \r\n            }\r\n        }\r\n    },[isLiked]);\r\n        \r\n    const toggleLike = () => {\r\n        setAlreadyLiked(true);\r\n        setIsLiked((prev) => !prev);\r\n    }\r\n    \r\n    const toggleComment = () => SetOpenComment((prev) => !prev);\r\n    return(\r\n        <div className=\"famcoMsg famcoVip\" >\r\n            {editing ? ( \r\n                <>\r\n                <form onSubmit={onSubmit} className=\"container famcoMsgEdit\"> \r\n                    <textarea \r\n                    type=\"text\" \r\n                    placeholder=\"Edit your Famco message\" \r\n                    value={NewFamcoMsg} \r\n                    required\r\n                    autoFocus \r\n                    onChange={onChange}\r\n                    className=\"famcoMsgInput\"\r\n                    maxLength=\"120\"\r\n                    />\r\n                    <input type=\"submit\" value=\"Update\"  className=\"formBtn\"/>\r\n                    \r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    Cancel\r\n                </span>\r\n                </>\r\n                ) : ( \r\n                <>  \r\n                        <img src= {cuteCrown} className=\"vipTag\" />\r\n                        \r\n                        <h5 className=\"FamcoMsgCreatedDate\">{FamcoVipObj.uploadedDate}</h5>\r\n                    \r\n\r\n                    <h4 className=\"famcoMsgText\">\r\n                        \r\n                    {FamcoVipObj.attachmentUrl && <img src={FamcoVipObj.attachmentUrl} className=\"famcoAttachedImg\"/>}\r\n                        \r\n                    </h4>\r\n                    {FamcoVipObj.text}\r\n                    <br/>\r\n                    <br/>\r\n                    <div className=\"FamcoMsgLikes\">\r\n                        <img src={didIlike !== -1 ?heartIcon2:heartIcon1} \r\n                            onClick={toggleLike}\r\n                        /> \r\n                        <span>{FamcoVipObj.likes}</span>\r\n                    </div>\r\n\r\n                    {openComment ?(    \r\n                        <FontAwesomeIcon onClick={toggleComment} icon={faCommentDots }  className=\"FamcoComments\"/>\r\n                        ) : (\r\n                        <FontAwesomeIcon onClick={toggleComment} icon={emptyComments } className=\"FamcoComments\" /> \r\n                        )\r\n                    }    \r\n                    \r\n                    {isOwner ? \r\n                        (<h5 className=\"famcoOwner\"> {userObj.displayName}</h5>\r\n                            ) : (\r\n                            <h5 className=\"famcoOtherOwners\"> {FamcoVipObj.name}</h5>)\r\n                    }\r\n                    {isOwner && (\r\n                        <div className=\"famcoMsg__actions\"> \r\n                            <span onClick={toggleEditing}>\r\n                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                            </span>\r\n                            <span onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>\r\n                        </div>\r\n                        )}\r\n                        \r\n                    {userObj.displayName == \"ADMIN\" && (\r\n                            <span className=\"famcoMsg__actions superDelete\" onClick={onDeleteClick}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </span>  \r\n                        )}    \r\n                </>\r\n            )}\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default FamcoVip;","import FamcoVip from \"components/Famcovip\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { addDoc,doc, collection,getDoc, getDocs, query, onSnapshot, orderBy, where, } from \"@firebase/firestore\";\r\nimport {ref, uploadString, getDownloadURL} from \"@firebase/storage\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Home = ({userObj}) => {\r\n    const [NewFamcoMsg, setNewFamcoMsg] = useState(\"\");\r\n    const [NewFamcoMsges, setNewFamcoMsges] = useState([]);\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const [isAttachmentExist, SetIsAttachmentExist] = useState(false);\r\n    const [isUserInfoExist, SetIsUserInfoExist] = useState(false);\r\n    const [isUserVip, SetIsUserVip] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false); \r\n\r\n    const date = new Date();\r\n    const year = String(date.getFullYear());\r\n    const month = String(date.getMonth()+1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    const hours = String(date.getHours()).padStart(2, \"0\");\r\n    const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n    //const sec = String(date.getSeconds()).padStart(2,\"0\");\r\n\r\n    const getNewFamcoMsges = async() => {\r\n    const DbNewFamcoMsges = query(collection(dbService,\"NewFamcoVip\"));\r\n    const querySnapshot = await getDocs(DbNewFamcoMsges);\r\n    querySnapshot.forEach((doc) => {\r\n        const newFamcoMsgObj = {\r\n            ...doc.data(),\r\n            id: doc.id,\r\n                \r\n        }\r\n        setNewFamcoMsges((prev) => [newFamcoMsgObj, ...prev]);\r\n    });\r\n    };\r\n    \r\n    \r\n\r\n    const checkVip = async() =>{\r\n        \r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid),\r\n            );\r\n            const getDocuments = await getDocs(q);\r\n            \r\n            getDocuments.forEach(async(document) => {\r\n                const docRef = doc(dbService, \"UserInfo\", `${document.id}`);\r\n                const getDocument = await getDoc(docRef);\r\n                    if(getDocument.data().vip === \"jandc914\"){\r\n                        SetIsUserVip(true);\r\n                    }else {\r\n                        \r\n                    }\r\n            });\r\n    }\r\n\r\n\r\n    const checkUserInfo = async() =>{\r\n        checkVip();\r\n        const q = query(\r\n            collection(dbService, \"UserInfo\"),\r\n            where(\"creatorId\", \"==\", userObj.uid)\r\n            );\r\n            const getDocument = await getDocs(q);\r\n            getDocument.forEach(() => {\r\n                SetIsUserInfoExist(true);\r\n            });\r\n    }\r\n\r\n    \r\n\r\n    useEffect (() => { \r\n        \r\n        checkUserInfo();\r\n        const q = query(\r\n            collection(dbService, \"NewFamcoVip\"),\r\n            orderBy(\"createdAt\", \"desc\")\r\n            );\r\n            onSnapshot(q, (snapshot) => {\r\n            const famcoArr = snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n            }));\r\n            setNewFamcoMsges(famcoArr);\r\n            });\r\n            \r\n            }, []);\r\n\r\n    const onSubmit = async(event) => {       \r\n        setIsLoading(true);\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\"){\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n        // 여기에 업로드 어태치먼트가 이상해서그랭\r\n        const uploadFile = await uploadString(attachmentRef, attachment, \"data_url\");\r\n        attachmentUrl = await getDownloadURL(uploadFile.ref);\r\n        \r\n        }\r\n        const newfamcoPosting = {\r\n            text: NewFamcoMsg,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            name: userObj.displayName,\r\n            uploadedDate:  year +\"/\"+ month +\"/\"+ day +\" At \"+ hours +\" : \"+ minutes,\r\n            likes: 0,\r\n            likedName: \"\",\r\n            attachmentUrl\r\n            \r\n        };\r\n        try {\r\n            await addDoc(collection(dbService, \"NewFamcoVip\"), newfamcoPosting);\r\n            setIsLoading(false);\r\n            } catch (error) {\r\n            }\r\n            \r\n            setNewFamcoMsg(\"\");\r\n            setAttachment(\"\");\r\n            SetIsAttachmentExist(false);\r\n    };\r\n    const onChange = ({ target: { value } }) => {\r\n        setNewFamcoMsg(value);\r\n        };\r\n    \r\n    const onFileChange = (event) => {\r\n\r\n        const {\r\n            target: {files},\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: {result},\r\n                } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        SetIsAttachmentExist(true);\r\n        reader.readAsDataURL(theFile);\r\n        \r\n    };\r\n\r\n\r\n    const onClearAttachment = (evnet) => {\r\n        SetIsAttachmentExist(false);\r\n        setAttachment(\"\");\r\n    }\r\n    \r\n    return (\r\n        <>\r\n    {isUserVip ? (    \r\n    <div className=\"container\">\r\n\r\n        <span className=\"vip__span\">Welcome to VIP room!</span>\r\n        \r\n        <form onSubmit ={onSubmit} className=\"famcoMsgForm\">\r\n        <div className=\"famcoMsgInput__container\">\r\n            {isUserInfoExist ? ( \r\n                <>\r\n            <textarea\r\n                className=\"famcoMsgInput__input\"\r\n                value={NewFamcoMsg} \r\n                onChange= {onChange} \r\n                type=\"text\" \r\n                placeholder=\" What's on your mind?\" \r\n                maxLength=\"120\" \r\n                required\r\n            />\r\n\r\n            {isLoading ? ( \r\n                <div className=\"loading\"></div>\r\n            ) : (\r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Post\" \r\n                    className=\"famcoMsgInput__post\"\r\n                />\r\n            )}\r\n            {isAttachmentExist ? (\r\n                <></>\r\n            ) : (\r\n                <>\r\n                <label htmlFor=\"attach-file\" className=\"famcoMsgInput__label\">\r\n                <FontAwesomeIcon icon={faPlus} />\r\n                    <span> Add photo</span>  \r\n                </label>\r\n                <input\r\n                className=\"famcoMsgInput__labelChild\"\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                />\r\n                </>\r\n            )}\r\n\r\n            </>\r\n            ):(\r\n                <div className=\"noUserName\">Add infomation on your profile to start</div>\r\n            )}\r\n            {attachment && (\r\n            <div className=\"famcoMsgForm__attachment\">\r\n                <img \r\n                src={attachment}\r\n                />\r\n            <div className=\"famcoMsgForm__clear\" onClick={onClearAttachment}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n            </div>\r\n            )}\r\n            </div>\r\n            \r\n        </form>\r\n        <div  style={{ marginTop: 30 }}>     \r\n            {NewFamcoMsges.map((NewFamcoMsg) => (\r\n                <FamcoVip \r\n                key={NewFamcoMsg.id} \r\n                FamcoVipObj={NewFamcoMsg} \r\n                isOwner={NewFamcoMsg.creatorId === userObj.uid}\r\n                userObj={userObj}\r\n                />\r\n            ))}\r\n        </div>\r\n        \r\n    </div>\r\n    ) : ( <span className=\"vip__span\"> You need the access for VIP room.</span> )}\r\n    </>\r\n    );\r\n    \r\n};\r\nexport default Home;","import {HashRouter as Router, Route} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport About from \"../routes/About\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\nimport Vip from \"routes/Vip\";\r\n\r\n\r\n\r\nconst AppRouther = ({refreshUser,isLoggedIn, userObj, NewFamcoMsg}) => {\r\n    return(\r\n        <Router >\r\n            \r\n            {isLoggedIn && <Navigation userObj={userObj}/>}\r\n            \r\n                {isLoggedIn ? (\r\n                    \r\n                    <div\r\n                        style={{\r\n                        maxWidth: 890,\r\n                        width: \"100%\",\r\n                        margin: \"0 auto\",\r\n                        marginTop: 100,\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                    <Route exact path=\"/\" >\r\n                        <Home userObj={userObj} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/profile\" >\r\n                        <Profile userObj={userObj}  refreshUser={refreshUser} FamcoMsgObj={NewFamcoMsg} />\r\n                    </Route>\r\n\r\n                    <Route exact path=\"/about\" >\r\n                        <About userObj={userObj} />\r\n                    </Route>\r\n\r\n                    <Route eact path=\"/vip\" >\r\n                        <Vip userObj={userObj} />\r\n                    </Route>\r\n\r\n                </div>\r\n                \r\n                    ): (\r\n                <>\r\n                    <Route exact path=\"/\">    \r\n                        <Auth />\r\n                    </Route>\r\n                </>\r\n                )}\r\n            \r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouther;","import React, { useEffect, useState} from \"react\";\nimport AppRouther from \"components/Router\";\nimport {authService} from \"fbase\";\n\n\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged(async(user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          vip:\"\",\n          updateProfile: (args) => user.updateProfile(args),\n        });\n        } else {\n          setUserObj(null);\n        }\n      setInit(true);\n    });\n\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n      setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      vip:\"\",\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  \n\n  return (\n    <>\n    {init ? <AppRouther\n      refreshUser={refreshUser} \n      isLoggedIn={Boolean(userObj)} \n      userObj={userObj}/> : \"Initializing...\"}\n      <footer className=\"footer\">&copy; {new Date().getFullYear()} Famco</footer>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles/style.css\";\n//import firebase from \"../firebase\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}